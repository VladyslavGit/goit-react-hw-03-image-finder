{"version":3,"sources":["components/searchbar/Searchbar.js","components/loader/Loader.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/button/Button.js","components/modal/Modal.js","components/App.js","index.js"],"names":["SearchBar","handleOnSubmit","handleChange","searchQuery","className","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","value","LoaderPage","color","height","width","timeout","ImageGalleryItem","itemLi","onOpen","largeImageURL","src","webformatURL","alt","onClick","ImageGallery","galleryItems","map","item","key","id","Button","buttonMore","Modal","handleKeyDown","props","handleClose","closeByClick","target","currentTarget","window","addEventListener","this","removeEventListener","url","Component","KEY","App","state","isLoading","error","page","largeImageUrl","openModal","handleSubmit","e","setState","axios","get","then","data","prevState","hits","finally","a","preventDefault","setLargeImage","toggleModal","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4e487842.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBar = ({ handleOnSubmit, handleChange, searchQuery }) => (\r\n  <header className=\"Searchbar\">\r\n    <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\r\n      <button type=\"submit\" className=\"SearchForm-button\">\r\n        <span className=\"SearchForm-button-label\">Search</span>\r\n      </button>\r\n\r\n      <input\r\n        onChange={handleChange}\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        value={searchQuery}\r\n      />\r\n    </form>\r\n  </header>\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst LoaderPage = () => (\r\n  <Loader\r\n    type=\"Watch\"\r\n    color=\"#00BFFF\"\r\n    height={100}\r\n    width={100}\r\n    timeout={3000}\r\n  />\r\n);\r\n\r\nexport default LoaderPage;\r\n","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ itemLi, largeImageURL, onOpen }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={itemLi.webformatURL}\r\n      alt=\"img\"\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={() => onOpen(itemLi.largeImageURL)}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./../imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ galleryItems, largeImageURL, onOpen }) => (\r\n  <>\r\n    <ul className=\"ImageGallery\">\r\n      {galleryItems.map(item => (\r\n        <ImageGalleryItem\r\n          itemLi={item}\r\n          key={item.id}\r\n          onOpen={onOpen}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ buttonMore }) => (\r\n  <button className=\"Button\" type=\"button\" onClick={buttonMore}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = ({ key }) => {\r\n    if (key === \"Escape\") {\r\n      this.props.handleClose();\r\n    }\r\n  };\r\n\r\n  closeByClick = ({ target, currentTarget }) => {\r\n    if (target !== currentTarget) {\r\n      this.props.handleClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { url } = this.props;\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div onClick={this.closeByClick} className=\"Modal\">\r\n          <img src={url} alt=\"img\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from \"./searchbar/Searchbar\";\r\nimport LoaderPage from \"./loader/Loader\";\r\nimport axios from \"axios\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Button from \"./button/Button\";\r\nimport Modal from \"./modal/Modal\";\r\nconst KEY = \"15377508-ff38c9d06f0ff909fbfde181e\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    galleryItems: [],\r\n    isLoading: false,\r\n    error: null,\r\n    searchQuery: \"\",\r\n    page: 1,\r\n    largeImageUrl: null,\r\n    openModal: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { searchQuery, page } = this.state;\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .get(\r\n        `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n      )\r\n      .then(data =>\r\n        this.setState(prevState => ({\r\n          galleryItems: [...prevState.galleryItems, ...data.data.hits]\r\n        }))\r\n      )\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleSubmit();\r\n  }\r\n\r\n  handleOnSubmit = async e => {\r\n    e.preventDefault();\r\n    await this.setState({ galleryItems: [] });\r\n    await this.handleSubmit();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchQuery: e.target.value });\r\n  };\r\n\r\n  buttonMore = async () => {\r\n    await this.setState(prevState => ({ page: prevState.page + 1 }));\r\n    this.handleSubmit();\r\n  };\r\n  componentDidUpdate() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\"\r\n    });\r\n  }\r\n\r\n  setLargeImage = largeImageUrl => {\r\n    this.setState({ largeImageUrl: largeImageUrl });\r\n    this.toggleModal();\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({ openModal: !state.openModal }));\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, galleryItems, searchQuery } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar\r\n          handleOnSubmit={this.handleOnSubmit}\r\n          handleChange={this.handleChange}\r\n          searchQuery={searchQuery}\r\n        />\r\n        {isLoading && <LoaderPage />}\r\n        <ImageGallery galleryItems={galleryItems} onOpen={this.setLargeImage} />\r\n        {this.state.openModal && (\r\n          <Modal\r\n            url={this.state.largeImageUrl}\r\n            handleClose={this.toggleModal}\r\n          />\r\n        )}\r\n        <Button buttonMore={this.buttonMore} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}